<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" href="../../../apuntes.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000">
<h1>Tema 1: Arquitectura de aplicaciones J2EE</h1>

<h2>1.1. Modelo de capas</h2>
<p>La mayor parte de aplicaciones J2EE utilizan una arquitectura dividida en <strong>capas</strong> 
  (<em>tiers</em>). Cada capa asume responsabilidades distintas, estando separada 
  de las dem&aacute;s desde el punto de vista l&oacute;gico. En general, una aplicaci&oacute;n 
  J2EE estar&aacute; constituida por las siguientes capas<font color="#FF0000">:</font></p>
<ul>
  <li><strong>Cliente</strong>: representa los dispositivos y sistemas que act&uacute;an 
    como clientes de la aplicaci&oacute;n: navegadores web, <em>applets</em>, 
    aplicaciones Java, tel&eacute;fonos WAP,... </li>
  <li><strong>Presentaci&oacute;n:</strong> encapsula toda la l&oacute;gica necesaria 
    para presentar los datos en los clientes. Recibe las peticiones de estos y 
    env&iacute;a las respuestas. En esta capa se utilizan tecnolog&iacute;as como 
    los <em>servlets</em> y las <em>p&aacute;ginas JSP</em>.</li>
  <li><strong>Negocio:</strong> implementa los procesos que constituyen el n&uacute;cleo 
    de la aplicaci&oacute;n. En la capa de negocio se emplean tecnolog&iacute;as 
    como los <em>EJBs</em>.</li>
  <li><strong>Acceso a datos:</strong> permite la comunicaci&oacute;n con los 
    sistemas donde se almacenan los datos. T&iacute;picamente emplea <em>JDBC</em> 
    para acceso a bases de datos o <em>JMS</em> y <em>conectores J2EE</em> para 
    acceder a sistemas no-java.</li>
  <li><strong>Recursos</strong>: son las bases de datos, los sistemas no-java 
    o los servicios externos a los que deba acceder la aplicaci&oacute;n.</li>
</ul>
<h2>1.1. Patrones J2EE</h2>
<p>En el proceso de desarrollo de muchas aplicaciones J2EE es necesario solucionar 
  una y otra vez los mismos problemas: autentificaci&oacute;n del cliente, persistencia 
  de datos, separaci&oacute;n entre presentaci&oacute;n, l&oacute;gica y control,... 
  En lugar de reinventar continuamente la rueda, para el desarrollador es mucho 
  m&aacute;s productivo aplicar <strong>patrones</strong> software.</p>
<p>En ingenier&iacute;a del software, un patr&oacute;n (<em>pattern</em>) es una 
  soluci&oacute;n ya probada y aplicable a un problema que se presenta una y otra 
  vez en el desarrollo de distintas aplicaciones y en distintos contextos. Los 
  <strong>patrones J2EE</strong> est&aacute;n orientados espec&iacute;ficamente 
  a los problemas comunes a todas las aplicaciones J2EE. Es importante destacar 
  que un patr&oacute;n no es en general una soluci&oacute;n que proporcione en 
  forma de c&oacute;digo directamente &quot;listo para usar&quot;, sino m&aacute;s 
  bien una descripci&oacute;n de c&oacute;mo resolver el problema y de ante qu&eacute; 
  circunstancias es aplicable.</p>
<p>Los patrones software tienen su origen en el libro <em>Design Patterns: Elements 
  of Reusable Object-Oriented Software</em>, que trata de patrones gen&eacute;ricos, 
  aplicables a una amplia gama de contextos y a cualquier lenguaje orientado a 
  objetos. En el caso de los patrones J2EE, los primeros fueron definidos en el 
  <em>Sun Java Center</em> y publicados en el libro <em>Core J2EE Patterns</em>. 
  Tambi&eacute;n est&aacute;n accesibles en el sitio web de Java. Adem&aacute;s, 
  hay otros sitios que mantienen cat&aacute;logos de patrones J2EE, por ejemplo 
  <a href="http://www.theserverside.com">&quot;The Server Side&quot;</a>.</p>
<p>Normalmente, los patrones J2EE se dividen por capas, correspondi&eacute;ndose 
  con la arquitectura t&iacute;pica de un sistema J2EE. La siguiente figura<font color="#FF0000"> 
  </font> muestra los patrones definidos en Sun, y la relaci&oacute;n existente 
  entre ellos.</p>
<p>&nbsp;</p>
<p align="center"><img src="patrones.gif" width="580" height="768"></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
</body>
</html>
