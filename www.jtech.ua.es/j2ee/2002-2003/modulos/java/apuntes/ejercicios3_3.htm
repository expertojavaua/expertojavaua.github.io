<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <title>Ejercicios de Gr&aacute;ficos 2D y animaci&oacute;n</title>
         
  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
     
  <link rel="stylesheet" href="../../../apuntes.css" type="text/css">
</head>
  <body bgcolor="#ffffff" text="#000000">
<h1><span class="section">Gr&aacute;ficos 2D y animaci&oacute;n</span> </h1>
<p><b>1.</b> En el fichero <i>Ej1.java</i> tenemos una aplicaci&oacute;n que muestra 
  un mensaje de texto desplaz&aacute;ndose hacia la izquierda. Cuando el mensaje 
  se esconde totalmente por el lado izquierdo volver&aacute; a aparecer por la 
  derecha. Se pide:</p>
<blockquote> 
  <p><i>a) </i>Ejecutar la aplicaci&oacute;n y observar la animaci&oacute;n. &iquest;Qu&eacute; 
    problema encontramos? &iquest;A qu&eacute; se debe?</p>
  <p><i>b)</i> Solucionar el problema. Introducir los cambios necesarios en el 
    programa para que no se produzca este efecto no deseado.</p>
  <p><i>c)</i> Volver al programa inicial y sustituir el <b>Canvas</b> por un 
    <b>JPanel</b>. Ejecutar la aplicaci&oacute;n y observar la animaci&oacute;n 
    en este caso. &iquest;Porqu&eacute; ocurre esto?</p>
</blockquote>
<p><b>2.</b> En el fichero <i>Ej2.java</i> tenemos una aplicaci&oacute;n que muestra 
  un texto por pantalla. Dicho texto deber&aacute; cambiar de color cuando pasemos 
  con el rat&oacute;n por encima de &eacute;l. Se pide:</p>
<blockquote> 
  <p><i>a) </i>&iquest;De d&oacute;nde podemos obtener la informaci&oacute;n necesaria 
    para saber si el rat&oacute;n se encuentra sobre el texto?.</p>
  <p><i>b)</i> Introducir el c&oacute;digo necesario para que el texto cambie 
    de color al situarnos con el rat&oacute;n sobre el texto.</p>
</blockquote>
<p><b>3.</b> Vamos a realizar una sencilla aplicaci&oacute;n de dibujo. La aplicaci&oacute;n, 
  contenida en <i>Ej3.java</i>, nos permitir&aacute; dibujar rect&aacute;ngulos 
  en pantalla al pinchar con el rat&oacute;n sobre el &aacute;rea de dibujo. Cuando 
  pinchemos se fijar&aacute; un extremo del rect&aacute;ngulo, y mientras arrastremos 
  el rat&oacute;n iremos moviendo el otro extremo, hasta que soltemos el bot&oacute;n, 
  momento en el que se fijar&aacute; dicho extremo y quedar&aacute; dibujado fijo 
  en pantalla. Se pide:</p>
<p><i>a) </i>Cargar la aplicaci&oacute;n y probar a dibujar varios rect&aacute;ngulos. 
  &iquest;Qu&eacute; ocurre? Consultar el c&oacute;digo fuente para determinar 
  la causa del problema.</p>
<p><i>b)</i> El contenido del &aacute;rea de dibujo puede perderse en determinados 
  momentos (por ejemplo cuando minimizamos la ventana), por lo que deberemos ser 
  capaces de reconstruir todo el dibujo. Esto nos obliga o bien a guardar informaci&oacute;n 
  sobre todas la figuras dibujadas, para poder volverlas a redibujar, o a dibujar 
  en un &aacute;rea en memoria que podemos volcar a pantalla en cualquier momento, 
  tal como hacemos en el ejemplo. &iquest;Qu&eacute; ventajas e inconvenientes 
  tiene cada m&eacute;todo? &iquest;C&oacute;mo evitar&iacute;as el problema que 
  tiene nuestra aplicaci&oacute;n con cada uno de ellos?</p>
<p><i>c)</i> Evitaremos el problema de que las figuras dejen rastro mientras las 
  dibujamos de una forma eficiente. Utilizaremos para ello el modo de dibujo XOR. 
  A&ntilde;adir las l&iacute;neas de c&oacute;digo para utilizar este modo (utilizaremos 
  color blanco para el XOR) dentro de la funci&oacute;n que realiza el dibujado 
  del rect&aacute;ngulo en cada momento (funci&oacute;n <i>dibuja</i>), en el 
  lugar indicado mediante comentarios. Ejecutar el programa para comprobar que 
  funciona correctamente. Consultar el resto del c&oacute;digo para estudiar como 
  utilizamos el modo XOR. Explica c&oacute;mo evitamos que las figuras dejen rastro. 
  &iquest;Qu&eacute; ventajas tiene este m&eacute;todo?</p>
<p><b>4.</b> Juego <b>PANJ!</b> Descargar el juego desde la p&aacute;gina de la 
  sesi&oacute;n (secci&oacute;n recursos). Se trata de una aplicaci&oacute;n completa 
  basada totalmente en gr&aacute;ficos 2D a pantalla completa. Descomprimir en 
  un directorio, y ejecutar mediante</p>
<pre class="codigo">java Panj</pre>
<p>A continuaci&oacute;n deberemos elegir el modo gr&aacute;fico. Ser&aacute; 
  suficiente un modo 320x240 y 16bpp. Una vez hecho esto veremos la pantalla de 
  t&iacute;tulo. Los controles son:</p>
<blockquote>
  <p>Izquierda: Cursor izquierdo<br>
  Derecha: Curso derecha<br>
  Fuego: Barra de espacio<br>
  Salir: ESC </p>
</blockquote>
<p>Con esto ya podremos empezar a jugar. Una vez hayas acabado, puedes realizar 
  de forma optativa los siguientes apartados:</p>
<p><i>a)</i> Consultar el c&oacute;digo fuente del juego, empezando por la clase 
  principal <i>Panj.java</i>. &iquest;Donde se implementa el modo a pantalla completa? 
  Modificar el c&oacute;digo para que se vea en forma de ventana.</p>
<p><i>b)</i> Volver a la versi&oacute;n inicial a pantalla completa. Implementar 
  render activo.</p>
<p><i>c)</i> Utilizar como t&eacute;cnica de doble buffer el intercambio de p&aacute;ginas 
  (<i>flipping</i>).</p>
<p><i>d)</i> Introducir cualquier cambio y mejora que se te ocurra en el juego.</p>
<blockquote>&nbsp;</blockquote>
       
          </body>
          </html>
