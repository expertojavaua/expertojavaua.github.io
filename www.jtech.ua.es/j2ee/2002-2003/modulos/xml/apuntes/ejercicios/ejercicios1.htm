<html>
<head>
<title>Tema 1: XML: conceptos b&aacute;sicos</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" href="../../../../apuntes.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000">
<h1>Ejercicios de XML: conceptos básicos</h1>
<ol>
  <li>El programa <b>AplicaXPath</b> que se proporciona en las plantillas del 
    tema aplica una expresi&oacute;n XPath a un fichero, tomando como nodo de 
    contexto el elemento ra&iacute;z. Por otro lado, el fichero <b>paises.xml</b> 
    contiene diversos datos (nombre, capital, poblaci&oacute;n, &aacute;rea, ...) 
    de un gran n&uacute;mero de pa&iacute;ses del mundo. Utilizando dicho programa 
    para comprobar el resultado, escribir expresiones XPath que seleccionen los 
    siguientes nodos del fichero <code>paises.xml</code>: 
    <ul>
      <li>Datos del pa&iacute;s <b>Spain</b>.</li>
      <li>Nombres de pa&iacute;ses que pertenecen a la regi&oacute;n <b>se</b> 
        (Sur de Europa).</li>
      <li>Nombre del &uacute;ltimo pais de la lista</li>
      <li>Pa&iacute;ses cuya poblaci&oacute;n el 1/7/2002 (etiqueta pop2) es menor 
        o igual que la mitad de la poblaci&oacute;n el a&ntilde;o anterior (etiqueta 
        pop1) .</li>
    </ul>
  </li>
  <li> 
    <p>El fichero <code>articulo.xml</code> representa un formato muy simple de 
      art&iacute;culo, escrito por ejemplo para una revista. Un art&iacute;culo 
      contiene un t&iacute;tulo, uno o m&aacute;s autores, un resumen y un texto. 
      El texto est&aacute; dividido en p&aacute;rrafos, y entre ellos pueden aparecer 
      im&aacute;genes. El fichero <code>articulo.dtd</code> contiene la gram&aacute;tica, 
      expresada mediante un DTD. </p>
    <ol type="a">
      <li>Desarrollar un XSLT que efect&uacute;e las siguientes transformaciones 
        sobre el fichero <code>articulo.xml</code>: 
        <ul>
          <li>Deben omitirse las im&aacute;genes.</li>
          <li>Las etiquetas <code>&lt;parrafo&gt;</code> deben sustituirse por 
            la etiqueta <code>&lt;p&gt;</code>.</li>
          <li>Los autores deben aparecer todos juntos, dentro de la etiqueta <code>&lt;autores&gt;</code>, 
            sin las etiquetas <code>&lt;autor&gt;</code>.</li>
          <li>Las etiquetas <code>&lt;articulo&gt;</code>, <code>&lt;texto&gt;</code> 
            y <code>&lt;titulo&gt;</code> deben conservarse tal cual.</li>
        </ul>
      <li>Modificar el XSLT del apartado anterior para que la etiqueta <code>&lt;resumen&gt;</code> 
        aparezca al principio del documento (justo despu&eacute;s de <code>&lt;articulo&gt;</code>).</li>
      <li> Modificar el XSLT desarrollado en el apartado anterior para que la 
        etiqueta <code>&lt;autores&gt;</code> tenga un contenido del estilo &quot;<b>por</b> 
        <i>Autor1</i> <b>,</b> <i>Autor2</i>, ... <b>y</b> <i>AutorN</i>&quot;. 
        Es decir:</li>
      <ul>
        <li> El primer autor debe venir precedido de la palabra &quot;<b>por</b>&quot;</li>
        <li>El &uacute;ltimo autor debe venir precedido de la palabra &quot;<b>y</b>&quot;.</li>
        <li>Los restantes autores deben venir precedidos por una <b>coma</b>.</li>
      </ul>
      <p>Para implementar este ejercicio, tener en cuenta que si un nodo encaja 
        con varios <i>templates</i>, se aplica primero el <i>template</i> con 
        la condici&oacute;n <b>match</b> &quot;m&aacute;s espec&iacute;fica&quot; 
        (por ejemplo (<code>match=&quot;autor&quot; </code>es m&aacute;s espec&iacute;fica 
        que <code>match=&quot;*&quot;</code>).</p>
    </ol>
  </li>
  <p> Para realizar las transformaciones XSLT, utilizar el programa <b>AplicaXSLT</b>, 
    que se proporciona con las plantillas de ejemplo. El programa toma como primer 
    par&aacute;metro de entrada el nombre de un fichero XML y como segundo el 
    nombre de un fichero XSLT, imprimiendo la transformaci&oacute;n en la salida 
    est&aacute;ndar. Alternativamente, se puede usar una llamada a la clase <code>org.apache.xalan.xslt.Process 
    -IN ficheroXML -XSL ficheroXSLT -OUT ficheroSalida.</code></p>
</ol>
</body>
</html>
